{"version":3,"file":"component---src-templates-extension-detail-js-030b4e6c42ea3cc2b40f.js","mappings":"2HAmCAA,EAAQ,EA7BR,SAAuBC,GACrB,MAAMC,EAAQD,EAAKE,MAAM,KAEzB,GAAID,EAAME,QAAU,EAAG,CACrB,MAAMC,EAAW,CACfC,QAASJ,EAAM,GACfK,WAAYL,EAAM,GAClBM,QAASN,EAAMA,EAAME,OAAS,IAgBhC,OAbIF,EAAME,OAAS,IACjBC,EAASI,UAAYP,EAAM,IAGzBA,EAAME,OAAS,IACjBC,EAASK,WAAaR,EAAM,IAG1BG,EAASG,QAAQG,SAAS,eAC5BN,EAASO,YAAa,EACtBP,EAASG,QAAUH,EAASG,QAAQK,OAAO,EAAGR,EAASG,QAAQM,QAAQ,eAGlET,CACT,CAEA,MAAM,IAAIU,MAAM,6DAClB,C,uBCjCA,MAAMC,EAAQC,EAAAA,MAAAA,EAERC,EAA2B,QAC3BC,EAAW,CACf,0CAA2C,UAC3C,mDAAoD,WACpD,kCAAmCD,GA+C/BE,EAAqBC,IAAe,IAAD,MACvC,MAAMC,EAAQD,aAAH,EAAGA,EAAYlB,MAAM,QAChC,IAAIoB,EAASD,aAAH,EAAGA,EACTE,KAAIC,GACGA,EAAK,GAAGC,cAAgBD,EAAKE,UAAU,KAE/CC,KAAK,KAWR,OARAL,EAASJ,EAASI,GACdJ,EAASI,GADJ,UAELA,SAFK,aAEL,EAAQM,QAAQ,YAAa,IAGjCN,EAAM,UAAGA,SAAH,aAAG,EAAQM,QAAQ,mCAAoC,IAC7DN,EAAM,UAAGA,SAAH,aAAG,EAAQM,QAAQ,+BAAgC,IAElDN,CAAP,EAGFO,EAAO9B,QAAU,CACfoB,qBACAW,cAlEoBC,IACpB,GAAIA,GAAUA,EAAOC,SAAS,KAAM,CAElC,OADoBjB,EAAMgB,GACPzB,UACpB,CACC,OAAOyB,CACR,EA6DDE,UA1DgB,CAACF,EAAQG,KACzB,GAAIH,GAAUA,EAAOC,SAAS,KAAM,CAClC,MAAMG,EAAcpB,EAAMgB,GACpBK,EAAeD,EAAY5B,QAAQL,MAAM,KACzCmC,EAAQD,EAAa,GAAnB,IAAyBA,EAAa,GACxCE,EAAWJ,aAAH,EAAGA,EAAkBK,MACjCD,GAAYA,EAAS,kBAAoBH,EAAY9B,UAEjDmC,EACkD,OAAtDF,aAAA,EAAAA,EAAUG,QAAQF,MAAKG,GAAUA,EAAOL,KAAOA,KAC3CM,EAAYP,EAAa,GACzBQ,EAAU,QAAQC,KAAKF,IAAc,KAAKE,KAAKF,GACrD,MAAO,CACLG,YAAaX,EAAY9B,QACzBgC,GAAIA,EACJG,gBACAI,UAEH,GAyCDG,wBAtC8BhB,IAC9B,GAAIA,GAAUA,EAAOC,SAAS,KAAM,CAClC,MAAMG,EAAcpB,EAAMgB,GAEpBiB,EAAiB7B,EAAmBgB,EAAY7B,YAEtD,OAAI0C,IAAmB/B,EACd+B,EAEGb,EAAY9B,QAAtB,IAAiC2C,CAEpC,G,+LC5CH,MAAMC,EAAiBC,EAAAA,QAAAA,OAAAA,WAAH,yEAAGA,CAAH,uOAadC,GAAaD,EAAAA,EAAAA,UAAOE,GAAS,gBAAC,KAASA,KAA7B,gFAAGF,CAAH,0FAMVG,GAAaH,EAAAA,EAAAA,UAAOE,GAAS,gBAAC,IAAoBA,KAAxC,gFAAGF,CAAH,6IAiBhB,MAVsB,IAAe,IAAd,KAAElD,GAAW,EAClC,OACE,gBAACiD,EAAD,KACE,gBAACE,EAAD,CAAYG,GAAG,KAAf,cACA,gBAACD,EAAD,CAAYE,KAAK,gBAChBvD,EAJL,EC5BF,MAAMwD,EAAgBN,EAAAA,QAAAA,QAAAA,WAAH,4EAAGA,CAAH,2RAYbO,EAAgBP,EAAAA,QAAAA,IAAAA,WAAH,4EAAGA,CAAH,yCAIbQ,EAAgBR,EAAAA,QAAAA,IAAAA,WAAH,4EAAGA,CAAH,0CAIbG,GAAaH,EAAAA,EAAAA,UAAOE,GAAS,gBAAC,IAAoBA,KAAxC,oFAAGF,CAAH,qCAiDhB,MA5C0B,IAEnB,IADLS,MAAM,KAAE3D,EAAF,OAAQ4D,EAAR,UAAgBC,EAAhB,SAA2BC,EAA3B,YAAqCC,EAArC,KAAkDC,EAAlD,IAAwDC,EAAxD,KAA6DV,IAC/D,EACJ,MAAMW,EAAQL,GAAwB7D,EAAKmE,cAErCC,EAAUJ,IAAcF,aAAV,EAAUA,EAAWI,IACzC,GAAIE,EAAS,CACX,MAAMC,EAAYC,GAAYP,EAAcA,EAAYO,GAAWA,EAEnE,IAAIC,MAAMC,QAAQJ,GAiBX,CACL,MAAMK,EAAgBJ,EAAUD,GAC1BM,EAAYT,EAAM,qBAAGU,KAAMV,GAAMQ,GAAqBA,EAE5D,OACE,gBAACjB,EAAD,KACE,gBAACC,EAAD,KAAgBzD,GAChB,gBAAC0D,EAAD,KAEGH,GAAQ,gBAAC,EAAD,CAAYA,KAAM,CAAC,MAAOA,KAClCmB,GAIR,CA/B2B,CAC1B,MAAMD,EAAgBL,EACnB7C,KAAI+C,GAAWD,EAAUC,KACzBM,QAAOC,GAAY,MAANA,IAEhB,GAAIJ,EAActE,OAAS,EAAG,CAC5B,MAAM2E,EAAQlB,GAAUQ,EAAQjE,OAAS,EAAIyD,EAAS5D,EACtD,OACE,gBAACwD,EAAD,KACE,gBAACC,EAAD,KAAgBqB,GACfL,EAAclD,KACb,CAAC+C,EAASS,IACRT,GAAW,gBAACZ,EAAD,CAAesB,IAAKD,GAAIT,KAI5C,CACF,CAeF,GCnEH,MAAMW,EAAa/B,EAAAA,QAAAA,OAAAA,WAAH,yEAAGA,CAAH,kBAsBhB,MAlBwB,IAAmB,IAAlB,SAAEgC,GAAe,EACxC,MAKM,EAACC,EAAD,EAAaC,IAAiBC,EAAAA,EAAAA,UAAS,aAE7C,OACE,gBAAC,WAAD,KACGH,EACD,gBAACD,EAAD,CAAYK,QAVD,KACbC,UAAUC,UAAUC,UAAUP,GAC9BE,EAAc,kBAAd,GASI,gBAAC,IAAD,CAAiB7B,KAAM4B,KAJ7B,ECZF,MAAMO,EAAYxC,EAAAA,QAAAA,IAAAA,WAAH,+EAAGA,CAAH,qMA0Cf,MA9BiC,IAAmB,IAAlB,SAAE9C,GAAe,EACjD,MAAMuF,EAAYvF,EAAWA,EAASF,MAAM,MAAM,GAAK,iBACvD,OACE,gBAAC,WAAD,KACE,+HAIA,yCACA,gBAACwF,EAAD,KACE,gBAAC,EAAD,wBACsBC,IAGxB,mCACA,gBAACD,EAAD,KACE,gBAAC,EAAD,mDACiDC,EADjD,MAIF,oCACA,gBAACD,EAAD,KACE,gBAAC,EAAD,6CAC2CC,EAD3C,MApBN,E,oBCkBF,MAlCuB,IAAiD,IAAhD,SAAEvF,EAAF,SAAYwF,EAAZ,UAAsBC,EAAtB,QAAiCpD,GAAc,EAErE,GAAIrC,GAAYA,EAAS4B,SAAS,OAC3B4D,EAAU,CACb,MAAMzD,GAAcpB,EAAAA,EAAAA,GAAMX,GACpBE,EAAa6B,EAAY7B,WAC/B,IACEuF,IACAA,EAAU7D,SAAS,2CAoBnB,MAAM,8BAA+BG,EAAY9B,QAAjD,MAA8D8B,EAAY7B,WAnB1E,CACA,MAAMwF,EAAoBxF,EAAWsB,QAAQ,YAAa,IAEpDmE,EACJtD,GAAWA,EAAQmC,QAAOlC,GAAUA,EAAOF,gBAE7C,IADkBuD,aAAA,EAAAA,EAAgB5F,QAAS,EAC5B,CAGb,MAAMuC,EAASqD,EAAexD,MAAKyD,IAAMA,EAAEpD,UAC3C,GAAIF,EAAQ,CAGV,MAAM,8BAA+BoD,GADpB,MAASpD,EAAOI,YAAhB,MAAiCJ,EAAOL,GAE1D,CACC,MAAM,8BAA+ByD,CAExC,CACF,CAGF,CACF,EC5BH,MAAMG,GAAS/C,EAAAA,EAAAA,UAAOE,GAAS,oBAAOA,KAA1B,uEAAGF,CAAH,uQAqBNgD,EAAehD,EAAAA,QAAAA,KAAAA,WAAH,kEAAGA,CAAH,kHAQZiD,EAASjD,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,yFAsBZ,MAfiB,IAAiD,IAAhD,SAAE9C,EAAF,SAAYwF,EAAZ,UAAsBC,EAAtB,QAAiCpD,GAAc,EAC/D,MAAMwB,EAAMmC,EAAe,CAAEhG,WAAUwF,WAAUC,YAAWpD,YAC5D,GAAIwB,EACF,OACE,gCACE,gBAACkC,EAAD,KACE,gBAACF,EAAD,CAAQtB,KAAMV,GACZ,gBAACiC,EAAD,6BAKT,E,UCxCH,MAAMG,EAAmBnD,EAAAA,QAAAA,KAAAA,WAAH,8EAAGA,CAAH,mLAUhBoD,EAAWpD,EAAAA,QAAAA,OAAAA,WAAH,sEAAGA,CAAH,yFAQRqD,EAAkBrD,EAAAA,QAAAA,OAAAA,WAAH,6EAAGA,CAAH,mPAWfsD,EAAoBtD,EAAAA,QAAAA,OAAAA,WAAH,+EAAGA,CAAH,oOAUjBuD,EAAUvD,EAAAA,QAAAA,IAAAA,WAAH,qEAAGA,CAAH,sCAKPwD,EAAYxD,EAAAA,QAAAA,IAAAA,WAAH,uEAAGA,CAAH,0FAQTyD,EAAWzD,EAAAA,QAAAA,IAAAA,WAAH,sEAAGA,CAAH,4GASR0D,EAAgB1D,EAAAA,QAAAA,IAAAA,WAAH,2EAAGA,CAAH,mDAMb2D,EAAgB3D,EAAAA,QAAAA,IAAAA,WAAH,2EAAGA,CAAH,gKAUb4D,EAAuB5D,EAAAA,QAAAA,IAAAA,WAAH,kFAAGA,CAAH,yJAUpB6D,EAAuB7D,EAAAA,QAAAA,QAAAA,WAAH,mFAAGA,CAAH,yCAKpB8D,EAAqB9D,EAAAA,QAAAA,IAAAA,WAAH,iFAAGA,CAAH,MAClB+D,EAAkB/D,EAAAA,QAAAA,KAAAA,WAAH,8EAAGA,CAAH,0CAIfgE,EAAchE,EAAAA,QAAAA,EAAAA,WAAH,0EAAGA,CAAH,yHAYXiE,EAAuBjE,EAAAA,QAAAA,GAAAA,WAAH,mFAAGA,CAAH,6JAQpBkE,EAAO,IAAoB,IAAnB,UAAE5G,GAAgB,EAC9B,OACE,gBAACkG,EAAD,KACE,gBAAC,IAAD,CAAgBlG,UAAWA,EAAW6G,KAAM,MAFhD,EAOIC,EAAiBpE,EAAAA,QAAAA,IAAAA,WAAH,6EAAGA,CAAH,wBAIdqE,EAAWrE,EAAAA,QAAAA,KAAAA,WAAH,uEAAGA,CAAH,4BAqPDsE,EAAO,IAA8B,IAA3B7D,MAAM,UAAEnD,IAAkB,EAC/C,OAAO,gBAAC,IAAD,CAAKsE,MAAOtE,EAAUR,KAAMyH,YAAajH,EAAUiH,aAA1D,EAGF,MArPgC,IAGQ,IAAD,kDAFJ9D,MAAM,UAAEnD,EAAF,SAAakH,EAAb,KAAuBC,GAD/B,SAEEC,GACI,EACrC,MAAM,KACJ5H,GADI,YAEJyH,GAFI,WAGJI,GAHI,aAIJC,GAJI,SAKJ1H,GALI,SAMJ0D,GANI,UAOJ+B,GAPI,QAQJpD,IACEjC,EAEEuH,GAAgB,UAAAjE,GAASkE,qBAAT,SAAwBC,iBAC5C,qBAAGtD,KAAMb,GAASkE,cAAcC,kBAAhC,0BAEA,yBAIIC,IAAWpE,cAAA,EAAAA,GAAUoE,YAAYpE,cAAtB,EAAsBA,GAAUqE,WAAhC,UAA2CrE,GAASkE,qBAApD,aAA2C,EAAwBE,UAEpF,OACE,gBAAC,IAAD,CAAQN,SAAUA,GAChB,gBAAC,EAAD,CAAe5H,KAAMA,KACpB8D,GAAS8B,UAAY,gBAACW,EAAD,iBACrBuB,IACCD,GAAWtG,KAAI6G,GACb,gBAAC5B,EAAD,CAAmBxB,IAAKoD,EAAU/H,SAC/B,YAAYwC,KAAKuF,EAAUC,cAAgB,MAAQ,KACnDD,EAAUC,aAFb,iEAGoB,IAClB,gBAACpB,EAAD,KAAkBmB,EAAU/H,YAIlC,gBAACgG,EAAD,KACE,gBAACC,EAAD,KACE,gBAACc,EAAD,CAAM5G,UAAWA,IACjB,gBAACqG,EAAD,KAAgB7G,KAElB,gBAACyG,EAAD,KACE,gBAACG,EAAD,KACE,gBAACE,EAAD,KAAuBW,IAEtB3D,GAASwE,OACR,gBAACvB,EAAD,KACE,gBAACI,EAAD,sBADF,uBAEuB,IACrB,gBAACD,EAAD,CAAavC,KAAMb,GAASwE,OAA5B,iBAEe,IALjB,mCASF,gBAACvB,EAAD,KACE,gBAACI,EAAD,qBACA,gBAAC,EAAD,CAA0B/G,SAAUA,MAGtC,gBAAC2G,EAAD,KACGc,IACCA,GAAWtG,KAAI6G,GACb,gBAACpB,EAAD,CAAoBhC,IAAKoD,EAAU/H,SAChC,YAAYwC,KAAKuF,EAAUC,cAAgB,MAAQ,KACpD,gBAAC,EAAAE,KAAD,CAAMjF,GAAI,IAAM8E,EAAUI,MACvBJ,EAAUC,aADb,YAEQ,IAJV,oDAKoD,IAClD,gBAACpB,EAAD,KAAkBmB,EAAU/H,SAN9B,QAWN,gBAAC0G,EAAD,KACE,gBAACO,EAAD,wCACmC,IACjC,qBAAG3C,KAAK,oFAAR,sBAEK,IAJP,mBAKmB,IACjB,qBAAGA,KAAK,qDAAR,oBANF,4CAS4C3E,GAT5C,eAS8D,IAC5D,gBAACuH,EAAD,KAAWQ,IAVb,sEAeJ,gBAACpB,EAAD,KACE,gBAAC,EAAD,CACEf,SAAU9B,GAAS8B,SACnBxF,SAAUA,GACVyF,UAAWA,GACXpD,QAASA,KAGX,gBAAC,EAAD,CACEkB,KAAM,CACJ3D,KAAM,iBACNgE,KAAI,UAAEF,GAAS2E,aAAX,aAAE,EAAgBlI,WAG1B,gBAAC,EAAD,CACEoD,KAAM,CACJ3D,KAAM,eAENgE,MAAM,UAAAF,GAAS2E,aAAT,eAAgBC,WAAY,EAA5B,UAAgC5E,GAAS2E,aAAzC,aAAgC,EAAgBC,eAAYC,EAClE5E,YAAa2E,GACXA,GACIE,EAAAA,EAAAA,GAAO,IAAIC,MAAMH,GAAY,gBAC7B,aAGV,gBAAC,EAAD,CACE/E,KAAM,CACJ3D,KAAM,WACNgE,KAAI,UAAEF,GAAS2E,aAAX,aAAE,EAAgBpI,WAG1B,gBAAC,EAAD,CACEsD,KAAM,CACJ3D,KAAM,cACNgE,KAAI,UAAEF,GAAS2E,aAAX,aAAE,EAAgBnI,cAG1B,gBAAC,EAAD,CACEqD,KAAM,CACJ3D,KAAM,aACN6D,UAAW,uBACXC,eAGJ,gBAAC,EAAD,CACEH,KAAM,CACJ3D,KAAM,SACN8D,eAGJ,gBAAC,EAAD,CACEH,KAAM,CACJ3D,KAAM,WACN6D,UAAW,aACXC,eAGJ,gBAAC,EAAD,CACEH,KAAM,CACJ3D,KAAM,WACN4D,OAAQ,YACRC,UAAW,UACXC,SAAUtD,EAEVuD,YAAaO,GACX,kCAAkCzB,KAAKyB,GACnC,MACAvB,EAAAA,EAAAA,yBAAwBuB,MAGlC,gBAAC,EAAD,CACEX,KAAM,CACJ3D,KAAM,uBACN6D,UAAW,qBACXC,eAGJ,gBAAC,EAAD,CACEH,KAAM,CACJ3D,KAAM,UACN4D,OAAQ,WACRI,KAAMkE,MAGV,gBAAC,EAAD,CACEvE,KAAM,CACJ3D,KAAM,aACNgE,KAAM,gBACNC,IAAG,UAAEH,GAAS2E,aAAX,aAAE,EAAgBxE,OAGzB,gBAAC,EAAD,CACEN,KAAM,CACJ3D,KAAM,cACN6D,UAAW,MACXN,KACE,UAAA/C,EAAUsD,gBAAV,mBAAoBkE,qBAApB,mBAAmC/D,WAAnC,SAAwCjC,SAAS,WAAjD,UACAxB,EAAUsD,gBADV,iBACA,EAAoBkE,qBADpB,iBACA,EAAmC/D,WADnC,OACA,EAAwCjC,SAAS,UAC7C,eACA2G,EACN3E,KAAM,UAAAxD,EAAUsD,gBAAV,mBAAoBkE,qBAApB,SAAmCc,QAAnC,UACFtI,EAAUsD,gBADR,iBACF,EAAoBkE,qBADlB,aACF,EAAmCc,QACnC,SACJ7E,IAAG,UAAEzD,EAAUsD,gBAAZ,iBAAE,EAAoBkE,qBAAtB,aAAE,EAAmC/D,OAG5C,gBAAC,EAAD,CACEN,KAAM,CACJ3D,KAAM,SACN6D,UAAW,SACXC,SAAQ,UAAEtD,EAAUsD,gBAAZ,aAAE,EAAoBkE,cAC9B/D,IAAG,UAAEzD,EAAUsD,gBAAZ,iBAAE,EAAoBkE,qBAAtB,aAAE,EAAmCe,eAMhD,uBAAKC,UAAU,wBACb,sBACEC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACG5B,GACC,gBAAC,EAAAa,KAAD,CAAMjF,GAAI,IAAMoE,EAASc,KAAMe,IAAI,QAAnC,KACK7B,EAAS1H,OAIlB,0BACG2H,GACC,gBAAC,EAAAY,KAAD,CAAMjF,GAAI,IAAMqE,EAAKa,KAAMe,IAAI,QAC5B5B,EAAK3H,KADR,UA5Md,C","sources":["webpack://quarkus-extensions/./node_modules/mvn-artifact-name-parser/lib/parse.js","webpack://quarkus-extensions/./src/components/util/pretty-platform.js","webpack://quarkus-extensions/./src/components/extensions-display/breadcrumb-bar.js","webpack://quarkus-extensions/./src/components/extensions-display/extension-metadata.js","webpack://quarkus-extensions/./src/components/util/copy-to-clipboard.js","webpack://quarkus-extensions/./src/components/extensions-display/installation-instructions.js","webpack://quarkus-extensions/./src/components/util/code-quarkus-url.js","webpack://quarkus-extensions/./src/components/extensions-display/code-link.js","webpack://quarkus-extensions/./src/templates/extension-detail.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction parseFileName(name) {\n  const parts = name.split(':');\n\n  if (parts.length >= 3) {\n    const artifact = {\n      groupId: parts[0],\n      artifactId: parts[1],\n      version: parts[parts.length - 1]\n    };\n\n    if (parts.length > 3) {\n      artifact.extension = parts[2];\n    }\n\n    if (parts.length > 4) {\n      artifact.classifier = parts[3];\n    }\n\n    if (artifact.version.endsWith('-SNAPSHOT')) {\n      artifact.isSnapShot = true;\n      artifact.version = artifact.version.substr(0, artifact.version.indexOf('-SNAPSHOT'));\n    }\n\n    return artifact;\n  }\n\n  throw new Error('not a maven package name. try <group>:<artifact>:<version>');\n}\n\nexports.default = parseFileName;","const parse = require(\"mvn-artifact-name-parser\").default\n\nconst nonPlatformExtensionName = \"Other\"\nconst mappings = {\n  \"Quarkus Bom Quarkus Platform Descriptor\": \"Quarkus\",\n  \"Quarkus Qpid Jms Bom Quarkus Platform Descriptor\": \"Qpid JMS\",\n  \"Quarkus Non Platform Extensions\": nonPlatformExtensionName,\n}\n\nconst getPlatformId = origin => {\n  if (origin && origin.includes(\":\")) {\n    const coordinates = parse(origin)\n    return coordinates.artifactId\n  } else {\n    return origin\n  }\n}\n\nconst getStream = (origin, currentPlatforms) => {\n  if (origin && origin.includes(\":\")) {\n    const coordinates = parse(origin)\n    const versionParts = coordinates.version.split(\".\")\n    const id = `${versionParts[0]}.${versionParts[1]}`\n    const platform = currentPlatforms?.find(\n      platform => platform[\"platform-key\"] === coordinates.groupId\n    )\n    const isLatestThree =\n      platform?.streams.find(stream => stream.id === id) != null\n    const qualifier = versionParts[3]\n    const isAlpha = /Alpha/.test(qualifier) || /CR/.test(qualifier)\n    return {\n      platformKey: coordinates.groupId,\n      id: id,\n      isLatestThree,\n      isAlpha,\n    }\n  }\n}\n\nconst qualifiedPrettyPlatform = origin => {\n  if (origin && origin.includes(\":\")) {\n    const coordinates = parse(origin)\n\n    const prettyPlatform = prettyPlatformName(coordinates.artifactId)\n\n    if (prettyPlatform === nonPlatformExtensionName) {\n      return prettyPlatform\n    } else {\n      return `${coordinates.groupId}:${prettyPlatform}`\n    }\n  }\n}\n\nconst prettyPlatformName = platformId => {\n  const words = platformId?.split(/[ -]/)\n  let pretty = words\n    ?.map(word => {\n      return word[0].toUpperCase() + word.substring(1)\n    })\n    .join(\" \")\n\n  // Check if we have a mapping for this; if not, strip the opening 'Quarkus' to increase signal-to-noise\n  pretty = mappings[pretty]\n    ? mappings[pretty]\n    : pretty?.replace(/^Quarkus /, \"\")\n\n  // Get rid of some word-flab that we will never want\n  pretty = pretty?.replace(\" Bom Quarkus Platform Descriptor\", \"\")\n  pretty = pretty?.replace(\" Quarkus Platform Descriptor\", \"\")\n\n  return pretty\n}\n\nmodule.exports = {\n  prettyPlatformName,\n  getPlatformId,\n  getStream,\n  qualifiedPrettyPlatform,\n}\n","import * as React from \"react\"\n\nimport styled from \"styled-components\"\nimport Link from \"gatsby-link\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst BreadcrumbBart = styled.header`\n  height: 90px;\n  color: var(--white);\n  text-align: left;\n  font-size: var(--font-size-24);\n  opacity: 1;\n  margin: 0;\n  padding-left: var(--site-margins);\n  background-color: var(--quarkus-blue);\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`\nconst StyledLink = styled(props => <Link {...props} />)`\n  font-weight: var(--font-weight-awfully-bold);\n  text-decoration: none;\n  color: var(--white);\n`\n\nconst PaddedIcon = styled(props => <FontAwesomeIcon {...props} />)`\n  font-weight: var(--font-weight-bold);\n  font-size: var(--font-size-20);\n  margin-left: var(--a-modest-space);\n  margin-right: var(--a-modest-space);\n`\n\nconst BreadcrumbBar = ({ name }) => {\n  return (\n    <BreadcrumbBart>\n      <StyledLink to=\"/\">Extensions</StyledLink>\n      <PaddedIcon icon=\"angle-right\" />\n      {name}\n    </BreadcrumbBart>\n  )\n}\n\nexport default BreadcrumbBar\n","import * as React from \"react\"\n\nimport styled from \"styled-components\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst MetadataBlock = styled.section`\n  width: calc((50%) - var(--a-modest-space));\n  color: var(--grey-2);\n  text-align: left;\n  overflow-wrap: break-word;\n  font-size: var(--font-size-16);\n  padding-left: var(--a-modest-space);\n  padding-bottom: var(--a-modest-space);\n  padding-top: var(--a-modest-space);\n  border-bottom: 1px solid var(--grey-1);\n`\n\nconst MetadataTitle = styled.div`\n  margin-bottom: var(--a-small-space);\n`\n\nconst MetadataValue = styled.div`\n  font-weight: var(--font-weight-bold);\n`\n\nconst PaddedIcon = styled(props => <FontAwesomeIcon {...props} />)`\n  margin-left: 0;\n  margin-right: 5px;\n`\n\nconst ExtensionMetadata = ({\n  data: { name, plural, fieldName, metadata, transformer, text, url, icon },\n}) => {\n  const field = fieldName ? fieldName : name.toLowerCase()\n\n  const content = text ? text : metadata?.[field]\n  if (content) {\n    const transform = element => (transformer ? transformer(element) : element)\n\n    if (Array.isArray(content)) {\n      const prettyPrinted = content\n        .map(element => transform(element))\n        .filter(el => el != null)\n      // Do an extra check, in case transforming the array removed its content\n      if (prettyPrinted.length > 0) {\n        const title = plural && content.length > 1 ? plural : name\n        return (\n          <MetadataBlock>\n            <MetadataTitle>{title}</MetadataTitle>\n            {prettyPrinted.map(\n              (element, i) =>\n                element && <MetadataValue key={i}>{element}</MetadataValue>\n            )}\n          </MetadataBlock>\n        )\n      }\n    } else {\n      const prettyPrinted = transform(content)\n      const displayed = url ? <a href={url}>{prettyPrinted}</a> : prettyPrinted\n\n      return (\n        <MetadataBlock>\n          <MetadataTitle>{name}</MetadataTitle>\n          <MetadataValue>\n            {/*Anything added here also needs to be added to the FA library in layout.js */}\n            {icon && <PaddedIcon icon={[\"fab\", icon]} />}\n            {displayed}\n          </MetadataValue>\n        </MetadataBlock>\n      )\n    }\n  }\n}\n\nexport default ExtensionMetadata\n","import React, { useState } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport styled from \"styled-components\"\n\nconst CopyButton = styled.button`\n  border: none;\n`\n\nconst CopyToClipboard = ({ children }) => {\n  const doCopy = () => {\n    navigator.clipboard.writeText(children)\n    setButtonText(\"clipboard-check\")\n  }\n\n  const [buttonText, setButtonText] = useState(\"clipboard\")\n\n  return (\n    <React.Fragment>\n      {children}\n      <CopyButton onClick={doCopy}>\n        <FontAwesomeIcon icon={buttonText} />\n      </CopyButton>\n    </React.Fragment>\n  )\n}\n\nexport default CopyToClipboard\n","import * as React from \"react\"\nimport styled from \"styled-components\"\nimport CopyToClipboard from \"../util/copy-to-clipboard\"\n\nconst CodeBlock = styled.pre`\n  background-color: var(--grey-0);\n  border: 1px solid var(--grey-1);\n  padding: 1rem;\n  line-height: 1.2em;\n  overflow-x: auto;\n  color: var(--grey-4);\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nconst InstallationInstructions = ({ artifact }) => {\n  const shortName = artifact ? artifact.split(\"::\")[0] : \"group:artifact\"\n  return (\n    <React.Fragment>\n      <p>\n        To add this extension to your project, use the relevant command in\n        your Quarkus project directory:\n      </p>\n      <h3>Quarkus CLI</h3>\n      <CodeBlock>\n        <CopyToClipboard>\n          {`quarkus ext add ${shortName}`}\n        </CopyToClipboard>\n      </CodeBlock>\n      <h3>Maven</h3>\n      <CodeBlock>\n        <CopyToClipboard>\n          {`./mvnw quarkus:add-extension -Dextensions=\"${shortName}\"`}\n        </CopyToClipboard>\n      </CodeBlock>\n      <h3>Gradle</h3>\n      <CodeBlock>\n        <CopyToClipboard>\n          {`./gradlew addExtension --extensions=\"${shortName}\"`}\n        </CopyToClipboard>\n      </CodeBlock>\n    </React.Fragment>\n  )\n}\n\nexport default InstallationInstructions\n","import { default as parse } from \"mvn-artifact-name-parser\"\n\nconst codeQuarkusUrl = ({ artifact, unlisted, platforms, streams }) => {\n  // Do some light pre-checking so we don't have to deal with catching\n  if (artifact && artifact.includes(\":\")) {\n    if (!unlisted) {\n      const coordinates = parse(artifact)\n      const artifactId = coordinates.artifactId\n      if (\n        platforms &&\n        platforms.includes(\"quarkus-bom-quarkus-platform-descriptor\")\n      ) {\n        const trimmedArtifactId = artifactId.replace(/^quarkus-/, \"\")\n        // Don't return a URL if the streams aren't available on code.quarkus\n        const currentStreams =\n          streams && streams.filter(stream => stream.isLatestThree)\n        const isCurrent = currentStreams?.length > 0\n        if (isCurrent) {\n          // Choose a stream arbitrarily if there are multiple, since we have no good basis for choosing; almost always there will only be one, and it will be the latest\n          // Do not put in a stream if it's an alpha\n          const stream = currentStreams.find(s => !s.isAlpha)\n          if (stream) {\n            // We could perhaps do proper url encoding, but home-roll an encoded url\n            const streamQuery = `&S=${stream.platformKey}%3A${stream.id}`\n            return `https://code.quarkus.io/?e=${trimmedArtifactId}${streamQuery}`\n          } else {\n            return `https://code.quarkus.io/?e=${trimmedArtifactId}`\n          }\n        }\n      } else {\n        return `https://code.quarkus.io/?e=${coordinates.groupId}%3A${coordinates.artifactId}`\n      }\n    }\n  }\n}\n\nexport default codeQuarkusUrl\n","import * as React from \"react\"\n\nimport styled from \"styled-components\"\nimport codeQuarkusUrl from \"../util/code-quarkus-url\"\n\nconst Button = styled(props => <a {...props} />)`\n  color: var(--white);\n  display: flex;\n  justify-content: center;\n\n  white-space: nowrap;\n\n  background-color: var(--quarkus-blue);\n  border-radius: var(--border-radius);\n\n  padding: 0.5rem 2rem;\n\n  &:visited {\n    color: var(--white);\n  }\n\n  &:hover {\n    color: var(--white);\n    background-color: var(--dark-red);\n  }\n`\nconst CallToAction = styled.span`\n  font-weight: var(--font-weight-awfully-bold);\n  text-decoration: none;\n  text-transform: uppercase;\n  text-align: center;\n`\n\n// Used to ensure nothing wraps onto the same row as this, and also to center it since align-self wasn't being honoured\nconst RowHog = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: var(--a-modest-space);\n`\n\nconst CodeLink = ({ artifact, unlisted, platforms, streams }) => {\n  const url = codeQuarkusUrl({ artifact, unlisted, platforms, streams })\n  if (url) {\n    return (\n      <>\n        <RowHog>\n          <Button href={url}>\n            <CallToAction>Try This Extension</CallToAction>\n          </Button>\n        </RowHog>\n      </>\n    )\n  }\n}\n\nexport default CodeLink\n","import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { format } from \"date-fns\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport styled from \"styled-components\"\nimport BreadcrumbBar from \"../components/extensions-display/breadcrumb-bar\"\nimport ExtensionMetadata from \"../components/extensions-display/extension-metadata\"\nimport InstallationInstructions from \"../components/extensions-display/installation-instructions\"\nimport ExtensionImage from \"../components/extension-image\"\nimport CodeLink from \"../components/extensions-display/code-link\"\nimport { qualifiedPrettyPlatform } from \"../components/util/pretty-platform\"\n\nconst ExtensionDetails = styled.main`\n  margin-left: var(--site-margins);\n  margin-right: var(--site-margins);\n  margin-top: var(--a-generous-space);\n  margin-bottom: var(--a-generous-space);\n\n  display: flex;\n  flex-direction: column;\n`\n\nconst Headline = styled.header`\n  height: 160px;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 62px;\n  align-items: center;\n`\n\nconst UnlistedWarning = styled.header`\n  padding-left: var(--site-margins);\n  background-color: var(--grey-0);\n  text-align: left;\n  font-size: var(--font-size-24);\n  font-weight: var(--font-weight-bold);\n  color: var(--grey-2);\n  padding-top: var(--a-modest-space);\n  padding-bottom: var(--a-modest-space);\n`\n\nconst SupersededWarning = styled.header`\n  padding-left: var(--site-margins);\n  background-color: var(--soft-yellow);\n  text-align: left;\n  font-size: var(--font-size-24);\n  font-weight: var(--font-weight-bold);\n  padding-top: var(--a-modest-space);\n  padding-bottom: var(--a-modest-space);\n`\n\nconst Columns = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst LogoImage = styled.div`\n  width: 220px;\n  margin-right: 60px;\n  margin-bottom: 25px;\n  border-radius: 10px;\n  overflow: hidden;\n`\n\nconst Metadata = styled.div`\n  flex-grow: 1;\n  padding-left: 30px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-content: flex-start;\n`\n\nconst Documentation = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExtensionName = styled.div`\n  text-align: left;\n  font-size: var(--font-size-48);\n  font-weight: var(--font-weight-bold);\n  letter-spacing: 0;\n  color: var(--grey-2);\n  text-transform: uppercase;\n  opacity: 1;\n`\n\nconst ExtensionDescription = styled.div`\n  color: var(--grey-2);\n  text-align: left;\n  font-size: var(--font-size-16);\n  opacity: 1;\n  margin-bottom: 40px;\n  margin-top: 10px;\n  font-weight: var(--font-weight-bold);\n`\n\nconst DocumentationSection = styled.section`\n  margin-top: 20px;\n  margin-bottom: 50px;\n`\n\nconst DuplicateReference = styled.div``\nconst MavenCoordinate = styled.span`\n  font-weight: var(--font-weight-bold);\n`\n\nconst VisibleLink = styled.a`\n  &:link {\n    color: var(--link);\n    text-decoration: underline;\n  }\n\n  &:visited {\n    color: var(--link-visited);\n    text-decoration: underline;\n  }\n`\n\nconst DocumentationHeading = styled.h2`\n  text-transform: uppercase;\n  font-weight: var(--font-weight-normal);\n  font-size: var(--font-size-24);\n  padding-bottom: 10px;\n  border-bottom: 1px solid var(--grey-1);\n`\n\nconst Logo = ({ extension }) => {\n  return (\n    <LogoImage>\n      <ExtensionImage extension={extension} size={220} />\n    </LogoImage>\n  )\n}\n\nconst AuthorGuidance = styled.div`\n  font-style: italic;\n`\n\nconst Filename = styled.span`\n  font-family: monospace;\n`\n\nconst ExtensionDetailTemplate = ({\n                                   data: { extension, previous, next },\n                                   location,\n                                 }) => {\n  const {\n    name,\n    description,\n    duplicates,\n    isSuperseded,\n    artifact,\n    metadata,\n    platforms,\n    streams,\n  } = extension\n\n  const extensionYaml = metadata.sourceControl?.extensionYamlUrl ? (\n    <a href={metadata.sourceControl.extensionYamlUrl}>quarkus-extension.yaml</a>\n  ) : (\n    \"quarkus-extension.yaml\"\n  )\n\n  // Honour manual overrides of the sponsor\n  const sponsors = metadata?.sponsors || metadata?.sponsor || metadata.sourceControl?.sponsors\n\n  return (\n    <Layout location={location}>\n      <BreadcrumbBar name={name} />\n      {metadata.unlisted && <UnlistedWarning>Unlisted</UnlistedWarning>}\n      {isSuperseded &&\n        duplicates.map(duplicate => (\n          <SupersededWarning key={duplicate.groupId}>\n            {/^[aeiou]/i.test(duplicate.relationship) ? \"An \" : \"A \"}\n            {duplicate.relationship} version of this extension has been released\n            with the group id{\" \"}\n            <MavenCoordinate>{duplicate.groupId}</MavenCoordinate>\n          </SupersededWarning>\n        ))}\n\n      <ExtensionDetails>\n        <Headline>\n          <Logo extension={extension} />\n          <ExtensionName>{name}</ExtensionName>\n        </Headline>\n        <Columns>\n          <Documentation>\n            <ExtensionDescription>{description}</ExtensionDescription>\n\n            {metadata.guide && (\n              <DocumentationSection>\n                <DocumentationHeading>Documentation</DocumentationHeading>\n                Make sure to use the{\" \"}\n                <VisibleLink href={metadata.guide}>\n                  documentation\n                </VisibleLink>{\" \"}\n                to get your questions answered.\n              </DocumentationSection>\n            )}\n            <DocumentationSection>\n              <DocumentationHeading>Installation</DocumentationHeading>\n              <InstallationInstructions artifact={artifact} />\n            </DocumentationSection>\n\n            <DocumentationSection>\n              {duplicates &&\n                duplicates.map(duplicate => (\n                  <DuplicateReference key={duplicate.groupId}>\n                    {/^[aeiou]/i.test(duplicate.relationship) ? \"An \" : \"A \"}\n                    <Link to={\"/\" + duplicate.slug}>\n                      {duplicate.relationship} version\n                    </Link>{\" \"}\n                    of this extension was published with the group id{\" \"}\n                    <MavenCoordinate>{duplicate.groupId}</MavenCoordinate>.\n                  </DuplicateReference>\n                ))}\n            </DocumentationSection>\n\n            <DocumentationSection>\n              <AuthorGuidance>\n                This page was generated from the{\" \"}\n                <a href=\"https://quarkus.io/version/main/guides/extension-metadata#quarkus-extension-yaml\">\n                  extension metadata\n                </a>{\" \"}\n                published to the{\" \"}\n                <a href=\"https://quarkus.io/guides/extension-registry-user\">\n                  Quarkus registry\n                </a>\n                . Spot a problem? Submit a change to the {name} extension's{\" \"}\n                <Filename>{extensionYaml}</Filename> and this content will be\n                updated by the next extension release.\n              </AuthorGuidance>\n            </DocumentationSection>\n          </Documentation>\n          <Metadata>\n            <CodeLink\n              unlisted={metadata.unlisted}\n              artifact={artifact}\n              platforms={platforms}\n              streams={streams}\n            />\n\n            <ExtensionMetadata\n              data={{\n                name: \"Latest Version\",\n                text: metadata.maven?.version,\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Publish Date\",\n                // Count dates of 0 as undefined, so we don't render them\n                text: metadata.maven?.timestamp > 0 ? metadata.maven?.timestamp : undefined,\n                transformer: timestamp =>\n                  timestamp\n                    ? format(new Date(+timestamp), \"MMM dd, yyyy\")\n                    : \"unknown\",\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Group ID\",\n                text: metadata.maven?.groupId,\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Artifact ID\",\n                text: metadata.maven?.artifactId,\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Built with\",\n                fieldName: \"builtWithQuarkusCore\",\n                metadata,\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Status\",\n                metadata,\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Category\",\n                fieldName: \"categories\",\n                metadata,\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Platform\",\n                plural: \"Platforms\",\n                fieldName: \"origins\", // We label this 'platform' but include the platform and platform member both, so need to read origins\n                metadata: extension, // ugly, but we need to get it out of the top level, not the metadata\n                // Strip out\n                transformer: element =>\n                  /quarkus-non-platform-extensions/.test(element)\n                    ? null\n                    : qualifiedPrettyPlatform(element),\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Minimum Java version\",\n                fieldName: \"minimumJavaVersion\",\n                metadata,\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Sponsor\",\n                plural: \"Sponsors\",\n                text: sponsors,\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Repository\",\n                text: \"Maven Central\", // Hardcode for now, until we need to support other repos\n                url: metadata.maven?.url,\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Source code\",\n                fieldName: \"url\",\n                icon:\n                  extension.metadata?.sourceControl?.url?.includes(\"github\") ||\n                  extension.metadata?.sourceControl?.url?.includes(\"gitlab\")\n                    ? \"git-alt\"\n                    : undefined,\n                text: extension.metadata?.sourceControl?.project\n                  ? extension.metadata?.sourceControl?.project\n                  : \"source\",\n                url: extension.metadata?.sourceControl?.url,\n              }}\n            />\n            <ExtensionMetadata\n              data={{\n                name: \"Issues\",\n                fieldName: \"issues\",\n                metadata: extension.metadata?.sourceControl,\n                url: extension.metadata?.sourceControl?.issuesUrl,\n              }}\n            />\n          </Metadata>\n        </Columns>\n\n        <nav className=\"extension-detail-nav\">\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={\"/\" + previous.slug} rel=\"prev\">\n                  ← {previous.name}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={\"/\" + next.slug} rel=\"next\">\n                  {next.name} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </ExtensionDetails>\n    </Layout>\n  )\n}\n\n// TODO how is this used?\nexport const Head = ({ data: { extension } }) => {\n  return <Seo title={extension.name} description={extension.description} />\n}\n\nexport default ExtensionDetailTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    extension(id: { eq: $id }) {\n      id\n      name\n      description\n      artifact\n      metadata {\n        status\n        categories\n        guide\n        builtWithQuarkusCore\n        unlisted\n        minimumJavaVersion\n        sponsor\n        sponsors\n        icon {\n          childImageSharp {\n            gatsbyImageData(width: 220)\n          }\n          publicURL\n        }\n        maven {\n          version\n          groupId\n          artifactId\n          url\n          timestamp\n        }\n        sourceControl {\n          url\n          project\n          issues\n          issuesUrl\n          sponsors\n          projectImage {\n            childImageSharp {\n              gatsbyImageData(width: 220)\n            }\n          }\n          extensionYamlUrl\n          ownerImage {\n            childImageSharp {\n              gatsbyImageData(width: 220)\n            }\n          }\n        }\n      }\n\n      platforms\n      origins\n      streams {\n        id\n        isLatestThree\n        isAlpha\n        platformKey\n      }\n      duplicates {\n        relationship\n        groupId\n        slug\n      }\n      isSuperseded\n    }\n    previous: extension(id: { eq: $previousPostId }) {\n      slug\n      name\n    }\n    next: extension(id: { eq: $nextPostId }) {\n      slug\n      name\n    }\n  }\n`\n"],"names":["exports","name","parts","split","length","artifact","groupId","artifactId","version","extension","classifier","endsWith","isSnapShot","substr","indexOf","Error","parse","require","nonPlatformExtensionName","mappings","prettyPlatformName","platformId","words","pretty","map","word","toUpperCase","substring","join","replace","module","getPlatformId","origin","includes","getStream","currentPlatforms","coordinates","versionParts","id","platform","find","isLatestThree","streams","stream","qualifier","isAlpha","test","platformKey","qualifiedPrettyPlatform","prettyPlatform","BreadcrumbBart","styled","StyledLink","props","PaddedIcon","to","icon","MetadataBlock","MetadataTitle","MetadataValue","data","plural","fieldName","metadata","transformer","text","url","field","toLowerCase","content","transform","element","Array","isArray","prettyPrinted","displayed","href","filter","el","title","i","key","CopyButton","children","buttonText","setButtonText","useState","onClick","navigator","clipboard","writeText","CodeBlock","shortName","unlisted","platforms","trimmedArtifactId","currentStreams","s","Button","CallToAction","RowHog","codeQuarkusUrl","ExtensionDetails","Headline","UnlistedWarning","SupersededWarning","Columns","LogoImage","Metadata","Documentation","ExtensionName","ExtensionDescription","DocumentationSection","DuplicateReference","MavenCoordinate","VisibleLink","DocumentationHeading","Logo","size","AuthorGuidance","Filename","Head","description","previous","next","location","duplicates","isSuperseded","extensionYaml","sourceControl","extensionYamlUrl","sponsors","sponsor","duplicate","relationship","guide","Link","slug","maven","timestamp","undefined","format","Date","project","issuesUrl","className","style","display","flexWrap","justifyContent","listStyle","padding","rel"],"sourceRoot":""}